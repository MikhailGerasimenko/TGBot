#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GigaChat-20B-A3B-instruct –º–æ–¥–µ–ª–∏
"""

from llama_cpp import Llama
import time
import os

def test_gigachat():
    print("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GigaChat-20B-A3B-instruct –º–æ–¥–µ–ª–∏")
    print("=" * 60)
    
               # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–µ–ª–∏
           model_path = "models/model-gigachat_20b_q8_0.gguf"
    if not os.path.exists(model_path):
        print(f"‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
                       print("üì• –°–∫–∞—á–∞–π—Ç–µ –º–æ–¥–µ–ª—å: ./download_model.sh gigachat_20b_q8_0")
        return
    
    print(f"‚úÖ –ú–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è GigaChat-20B
    print("\n‚öôÔ∏è  –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...")
    llm = Llama(
        model_path=model_path,
        n_ctx=8192,                    # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        n_threads=12,                  # –ë–æ–ª—å—à–µ –ø–æ—Ç–æ–∫–æ–≤
        n_batch=1024,                  # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –±–∞—Ç—á
        n_gpu_layers=40,               # –ë–æ–ª—å—à–µ —Å–ª–æ–µ–≤ –Ω–∞ GPU
        verbose=True
    )
    
    print("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –±–æ—Ç–∞
    test_prompts = [
        {
            "name": "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç",
            "prompt": "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û–±—ä—è—Å–Ω–∏ –∫—Ä–∞—Ç–∫–æ –∏ —á–µ—Ç–∫–æ, —á—Ç–æ —Ç–∞–∫–æ–µ –°–û–ü (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞) –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω –≤ –∫–æ–º–ø–∞–Ω–∏–∏."
        },
        {
            "name": "–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
            "prompt": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∏ –≤—ã–¥–µ–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã: '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–ø—É—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –∑–∞ 2 –Ω–µ–¥–µ–ª–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—É—Å–∫–∞. –ó–∞—è–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∞–µ—Ç—Å—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é –æ—Ç–¥–µ–ª–∞. –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∑–∞—è–≤–ª–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.'"
        },
        {
            "name": "–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞",
            "prompt": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: '–ö–∞–∫ –º–Ω–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –±–æ–ª—å–Ω–∏—á–Ω—ã–π –ª–∏—Å—Ç? –ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –∏ –∫—É–¥–∞ –∏—Ö –ø–æ–¥–∞–≤–∞—Ç—å?' –î–∞–π —á–µ—Ç–∫–∏–π –ø–æ—à–∞–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç."
        }
    ]
    
    print(f"\nüß™ –ó–∞–ø—É—Å–∫–∞–µ–º {len(test_prompts)} —Ç–µ—Å—Ç–æ–≤...")
    
    for i, test in enumerate(test_prompts, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {test['name']}")
        print(f"–í–æ–ø—Ä–æ—Å: {test['prompt']}")
        print("-" * 50)
        
        start_time = time.time()
        
        try:
            # GigaChat –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π chat template
            response = llm(
                f"<|im_start|>user\n{test['prompt']}<|im_end|>\n<|im_start|>assistant\n",
                max_tokens=512,
                temperature=0.1,
                top_p=0.95,
                repeat_penalty=1.1,
                top_k=40,
                echo=False
            )
            
            generation_time = time.time() - start_time
            
            if response and "choices" in response and len(response["choices"]) > 0:
                answer = response["choices"][0]["text"].strip()
                print(f"–û—Ç–≤–µ—Ç ({generation_time:.2f}—Å):")
                print(answer)
                
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
                if "usage" in response:
                    usage = response["usage"]
                    print(f"\nüìä –¢–æ–∫–µ–Ω—ã: {usage.get('completion_tokens', 'N/A')} (–æ—Ç–≤–µ—Ç)")
                else:
                    print(f"\nüìä –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {generation_time:.2f} —Å–µ–∫—É–Ω–¥")
                    
            else:
                print("‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("=" * 60)
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("‚Ä¢ –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ - –º–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    print("‚Ä¢ –ï—Å–ª–∏ –º–µ–¥–ª–µ–Ω–Ω–æ - —É–º–µ–Ω—å—à–∏—Ç–µ n_gpu_layers –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ q4_k_m")
    print("‚Ä¢ –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ GPU –ø–∞–º—è—Ç—å –∏ –¥—Ä–∞–π–≤–µ—Ä—ã")

if __name__ == "__main__":
    test_gigachat() 