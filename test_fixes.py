#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

import requests
import json
import time

def test_generation():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –æ—á–∏—Å—Ç–∫–æ–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")
    
    url = "http://localhost:8000/generate"
    data = {
        "query": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?",
        "max_tokens": 50
    }
    
    try:
        response = requests.post(url, json=data, timeout=30)
        if response.status_code == 200:
            result = response.json()
            
            print(f"‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: {result['completion_tokens'] / result['generation_time']:.1f} —Ç/—Å")
            print(f"‚è±Ô∏è –í—Ä–µ–º—è: {result['generation_time']:.2f} —Å–µ–∫")
            print(f"üìä –¢–æ–∫–µ–Ω–æ–≤: {result['completion_tokens']}")
            print(f"\nüìù –û—Ç–≤–µ—Ç:")
            print(result['response'])
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
            if '[/SYS]' in result['response'] or '[/INST]' in result['response']:
                print("‚ùå –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –≤—Å–µ –µ—â–µ –µ—Å—Ç—å!")
                return False
            else:
                print("‚úÖ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —É–±—Ä–∞–Ω—ã!")
                return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            print(response.text)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_embeddings():
    """–¢–µ—Å—Ç —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–º–±–µ–¥–¥–∏–Ω–≥–∏...")
    
    url = "http://localhost:8000/embeddings"
    data = {
        "texts": ["—Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç", "–≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç"]
    }
    
    try:
        response = requests.post(url, json=data, timeout=10)
        if response.status_code == 200:
            result = response.json()
            
            print(f"üìä –°–æ–∑–¥–∞–Ω–æ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: {len(result['embeddings'])}")
            print(f"üìè –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å: {len(result['embeddings'][0])}")
            print(f"‚è±Ô∏è –í—Ä–µ–º—è: {result['embedding_time']:.3f} —Å–µ–∫")
            print("‚úÖ –≠–º–±–µ–¥–¥–∏–Ω–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            print(response.text)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_health():
    """–¢–µ—Å—Ç health check"""
    print("üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º health...")
    
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º health
    if not test_health():
        print("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    gen_ok = test_generation()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–º–±–µ–¥–¥–∏–Ω–≥–∏
    emb_ok = test_embeddings()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è: {'‚úÖ' if gen_ok else '‚ùå'}")
    print(f"–≠–º–±–µ–¥–¥–∏–Ω–≥–∏: {'‚úÖ' if emb_ok else '‚ùå'}")
    
    if gen_ok and emb_ok:
        print("üéâ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç!")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å") 